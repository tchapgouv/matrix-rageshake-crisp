import unittest
import random
import string
import datetime

from sleepy_conversations import get_sleepy_conversations


class TestFunctions(unittest.TestCase):
    
    def test_get_sleepy_conversation(self):
        sleepy_conversations = get_sleepy_conversations(3)
        print(f'sleepy conversations : {len(sleepy_conversations)}')
        for sleepy_conversation in sleepy_conversations:
            if visitor_has_unread_messages(sleepy_conversation) and is_older_than_seven_days(sleepy_conversation):
                print(f'sleepy conversation session_id : {sleepy_conversation["session_id"]}')
                print(f'sleepy conversation last update : {sleepy_conversation["updated_at"]}')


def visitor_has_unread_messages(conversation):
    return conversation["unread"]["visitor"] > 0

def is_older_than_seven_days(conversation):
    timestamp = conversation["updated_at"]/1000

    # Current date
    today = datetime.datetime.now()

    # Date from the timestamp
    timestamp_date = datetime.datetime.fromtimestamp(timestamp)

    difference = today - timestamp_date

    # Check if the difference is greater than 7 days
    return difference.days > 7

if __name__ == "__main__":
    unittest.main() 